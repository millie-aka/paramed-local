<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInitGravityPDFWatermarkAddon
{
    public static $prefixLengthsPsr4 = array (
        'G' => 
        array (
            'GFPDF\\Plugins\\Watermark\\' => 24,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'GFPDF\\Plugins\\Watermark\\' => 
        array (
            0 => __DIR__ . '/../..' . '/src',
        ),
    );

    public static $classMap = array (
        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
        'GFPDF\\Plugins\\Watermark\\Plugins\\PdfForGravityView' => __DIR__ . '/../..' . '/src/Plugins/PdfForGravityView.php',
        'GFPDF\\Plugins\\Watermark\\Watermark\\Options\\AddWatermarkFields' => __DIR__ . '/../..' . '/src/Watermark/Options/AddWatermarkFields.php',
        'GFPDF\\Plugins\\Watermark\\Watermark\\Options\\DisplayWatermark' => __DIR__ . '/../..' . '/src/Watermark/Options/DisplayWatermark.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInitGravityPDFWatermarkAddon::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInitGravityPDFWatermarkAddon::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInitGravityPDFWatermarkAddon::$classMap;

        }, null, ClassLoader::class);
    }
}
